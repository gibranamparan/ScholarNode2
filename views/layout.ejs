<!DOCTYPE html>
<html ng-app="scholarNode">
  <head>
    <title>ScholarNode v0.1</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap/css/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/css/dataTables.bootstrap.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/css/simple-sidebar.css">
    <link rel="stylesheet" href="/styles/estilo.css">
    <link rel="stylesheet" href="/styles/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/jquery/jquery.dataTables.min.css">
    <!--STYLES END-->
  </head>

  <body>
    <div id="wrapper" class="open-menu">
      <!-- Sidebar -->
      <div id="sidebar-wrapper">
        <ul class="sidebar-nav">
            <li class="sidebar-brand">
                <a href="/">
                    ScholarNode
                </a>
            </li>
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown"  href="#">
                  <i class="fa fa-users" aria-hidden="true"></i><span>Alumnos</span>
                  <span class="caret"></span>
                </a>
                <ul class="dropdown-menu menu-open">
                  <li><a href="/Alumno/">Busqueda</a></li>
                  <li><a href="#">Page 1-2</a></li> 
                </ul>
            </li>
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown"  href="#">
                <i class="glyphicon glyphicon-list-alt" aria-hidden="true"></i>
                <span>Grupos</span>
                <span class="caret"></span>
                </a>
                <ul class="dropdown-menu menu-open">
                  <li><a href="/Grupo/">Listado</a></li>
                  <li><a href="#">Page 2-2</a></li>
                </ul>
            </li>
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown"  href="#">
                <i class="fa fa-money" aria-hidden="true"></i>
                <span>Pagos</span>
                <span class="caret"></span>
                </a>
                <ul class="dropdown-menu menu-open">
                  <li><a href="/Pago/">Busqueda</a></li>
                  <li><a href="#">Page 3-2</a></li>
                </ul>
            </li>
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown"  href="#">
                <i class="fa fa-cogs" aria-hidden="true"></i>
                <span>Administraci√≥n</span>
                <span class="caret"></span>
                </a>
                <ul class="dropdown-menu menu-open">
                  <li><a href="#">Page 4-1</a></li>
                  <li><a href="#">Page 4-2</a></li>
                </ul>
            </li>
        </ul>
        <div id="menu-buttons">
         <i id="btn-menu-toggle" class="glyphicon glyphicon-menu-left" aria-hidden="true"></i>
        </div>
    </div>
      <!-- /#sidebar-wrapper -->

      <!-- Page Content -->
      <div id="main" class="container">
        <%- body %>
      </div>
      <!--
          Client-side Templates
          ========================

          HTML templates are important prerequisites of modern, rich client applications.
          To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
          that you load these templates client-side.

          By default, your Gruntfile is configured to automatically load and precompile
          client-side JST templates in your `assets/templates` folder, then
          include them here automatically (between TEMPLATES and TEMPLATES END).
          
          To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
          For example, here are a few things you could do:

              + Import templates from other directories
              + Use a different template engine (handlebars, jade, dust, etc.)
              + Internationalize your client-side templates using a server-side
                stringfile before they're served.
      -->

      <!--TEMPLATES-->
      
      <!--TEMPLATES END-->


      <!--

        Client-side Javascript
        ========================

        You can always bring in JS files manually with `script` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
        take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, files in your `assets/js` folder are included here
        automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
        CoffeeScript (.coffee) are supported. In production, your scripts will be minified
        and concatenated into a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your scripts
            + Import scripts from other directories
            + Use a different preprocessor, like TypeScript

      -->
    </div>
    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery.min.js"></script>
    <script src="/js/angular/angular.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/bootstrap/bootstrap.min.js"></script>
    <script src="/js/controllers.js"></script>
    <script src="/js/directives.js"></script>
    <script src="/js/filters.js"></script>
    <script src="/js/jquery/jquery.dataTables.min.js"></script>
    <script src="/js/scripts.js"></script>
    <script src="/js/services.js"></script>
    <!--SCRIPTS END-->

  </body>
</html>
